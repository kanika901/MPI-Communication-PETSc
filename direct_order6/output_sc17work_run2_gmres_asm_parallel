Must indicate log file name with -logfile optionHash: nohash
gmres | asm | reason=2 | time=1.250792e-02 | norm=7.34824e-05 | its=2
KSP Object: 4 MPI processes
  type: gmres
    GMRES: restart=30, using Classical (unmodified) Gram-Schmidt Orthogonalization with no iterative refinement
    GMRES: happy breakdown tolerance 1e-30
  maximum iterations=10000, initial guess is zero
  tolerances:  relative=1e-05, absolute=1e-50, divergence=10000.
  left preconditioning
  using PRECONDITIONED norm type for convergence test
PC Object: 4 MPI processes
  type: asm
    Additive Schwarz: total subdomain blocks = 4, amount of overlap = 1
    Additive Schwarz: restriction/interpolation type - RESTRICT
    Local solve is same for all blocks, in the following KSP and PC objects:
  KSP Object: (sub_) 1 MPI processes
    type: preonly
    maximum iterations=10000, initial guess is zero
    tolerances:  relative=1e-05, absolute=1e-50, divergence=10000.
    left preconditioning
    using NONE norm type for convergence test
  PC Object: (sub_) 1 MPI processes
    type: ilu
      out-of-place factorization
      0 levels of fill
      tolerance for zero pivot 2.22045e-14
      matrix ordering: natural
      factor fill ratio given 1., needed 1.
        Factored matrix follows:
          Mat Object: 1 MPI processes
            type: seqaij
            rows=5004, cols=5004
            package used to perform factorization: petsc
            total: nonzeros=30016, allocated nonzeros=30016
            total number of mallocs used during MatSetValues calls =0
              using I-node routines: found 2502 nodes, limit used is 5
    linear system matrix = precond matrix:
    Mat Object: 1 MPI processes
      type: seqaij
      rows=5004, cols=5004
      total: nonzeros=30016, allocated nonzeros=30016
      total number of mallocs used during MatSetValues calls =0
        using I-node routines: found 2502 nodes, limit used is 5
  linear system matrix = precond matrix:
  Mat Object: 4 MPI processes
    type: mpiaij
    rows=20002, cols=20002
    total: nonzeros=120004, allocated nonzeros=120004
    total number of mallocs used during MatSetValues calls =0
      using I-node (on process 0) routines: found 2501 nodes, limit used is 5
PC Object: 4 MPI processes
  type: asm
    Additive Schwarz: total subdomain blocks = 4, amount of overlap = 1
    Additive Schwarz: restriction/interpolation type - RESTRICT
    Local solve is same for all blocks, in the following KSP and PC objects:
  KSP Object: (sub_) 1 MPI processes
    type: preonly
    maximum iterations=10000, initial guess is zero
    tolerances:  relative=1e-05, absolute=1e-50, divergence=10000.
    left preconditioning
    using NONE norm type for convergence test
  PC Object: (sub_) 1 MPI processes
    type: ilu
      out-of-place factorization
      0 levels of fill
      tolerance for zero pivot 2.22045e-14
      matrix ordering: natural
      factor fill ratio given 1., needed 1.
        Factored matrix follows:
          Mat Object: 1 MPI processes
            type: seqaij
            rows=5004, cols=5004
            package used to perform factorization: petsc
            total: nonzeros=30016, allocated nonzeros=30016
            total number of mallocs used during MatSetValues calls =0
              using I-node routines: found 2502 nodes, limit used is 5
    linear system matrix = precond matrix:
    Mat Object: 1 MPI processes
      type: seqaij
      rows=5004, cols=5004
      total: nonzeros=30016, allocated nonzeros=30016
      total number of mallocs used during MatSetValues calls =0
        using I-node routines: found 2502 nodes, limit used is 5
  linear system matrix = precond matrix:
  Mat Object: 4 MPI processes
    type: mpiaij
    rows=20002, cols=20002
    total: nonzeros=120004, allocated nonzeros=120004
    total number of mallocs used during MatSetValues calls =0
      using I-node (on process 0) routines: found 2501 nodes, limit used is 5
************************************************************************************************************************
***             WIDEN YOUR WINDOW TO 120 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document            ***
************************************************************************************************************************

---------------------------------------------- PETSc Performance Summary: ----------------------------------------------



      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./parallel on a arch-linux2-c-tau named arya with 4 processors, by kanikas Tue Mar 28 17:35:35 2017
Using Petsc Development GIT revision: v3.7.5-3275-g86807ec  GIT Date: 2017-03-09 18:20:42 -0600

                         Max       Max/Min        Avg      Total 
Time (sec):           2.798e-01      1.00042   2.797e-01
Objects:              3.900e+01      1.00000   3.900e+01
Flop:                 5.678e+05      1.00050   5.676e+05  2.271e+06
Flop/sec:            2.030e+06      1.00053   2.029e+06  8.117e+06
Memory:               2.656e+06      1.03195              1.038e+07
MPI Messages:         3.150e+01      1.90909   2.475e+01  9.900e+01
MPI Message Lengths:  5.705e+05      2.99793   1.154e+04  1.142e+06
MPI Reductions:       1.150e+02      1.00000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flop
                            and VecAXPY() for complex vectors of length N --> 8N flop

Summary of Stages:   ----- Time ------  ----- Flop -----  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total   counts   %Total     Avg         %Total   counts   %Total 
 0:      Main Stage: 2.7939e-01  99.9%  2.2706e+06 100.0%  9.900e+01 100.0%  1.154e+04      100.0%  1.130e+02  98.3% 

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                   Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   Avg. len: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                             --- Global ---  --- Stage ---   Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   Avg len Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

MatMult                3 1.0 1.3521e-03 1.3 1.65e+05 1.0 1.8e+01 1.9e+01 0.0e+00  0 29 18  0  0   0 29 18  0  0   488
MatSolve               3 1.0 4.3631e-04 1.3 1.65e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0 29  0  0  0   0 29  0  0  0  1513
MatLUFactorNum         1 1.0 3.1077e-02 1.4 8.26e+04 1.0 0.0e+00 0.0e+00 0.0e+00 10 15  0  0  0  10 15  0  0  0    11
MatILUFactorSym        1 1.0 9.6762e-03 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  3  0  0  0  0   3  0  0  0  0     0
MatAssemblyBegin       2 1.0 6.0384e-03 6.3 0.00e+00 0.0 0.0e+00 0.0e+00 4.0e+00  1  0  0  0  3   1  0  0  0  4     0
MatAssemblyEnd         2 1.0 3.3503e-02 1.0 0.00e+00 0.0 1.2e+01 6.7e+00 2.3e+01 12  0 12  0 20  12  0 12  0 20     0
MatGetRowIJ            1 1.0 1.9836e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatCreateSubMats       1 1.0 1.4438e-02 1.4 0.00e+00 0.0 3.0e+01 4.3e+01 2.0e+00  4  0 30  0  2   4  0 30  0  2     0
MatGetOrdering         1 1.0 1.7765e-02 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  6  0  0  0  0   6  0  0  0  0     0
MatIncreaseOvrlp       1 1.0 5.4325e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 2.0e+00 19  0  0  0  2  19  0  0  0  2     0
MatLoad                1 1.0 5.7842e-02 1.0 0.00e+00 0.0 2.1e+01 5.4e+04 3.8e+01 21  0 21100 33  21  0 21100 34     0
MatView                6 3.0 3.2136e-03 2.0 0.00e+00 0.0 0.0e+00 0.0e+00 4.0e+00  1  0  0  0  3   1  0  0  0  4     0
VecMDot                2 1.0 2.2390e-03 9.4 3.00e+04 1.0 0.0e+00 0.0e+00 4.0e+00  1  5  0  0  3   1  5  0  0  4    54
VecNorm                4 1.0 1.0159e-03 2.1 4.00e+04 1.0 0.0e+00 0.0e+00 8.0e+00  0  7  0  0  7   0  7  0  0  7   158
VecScale               3 1.0 6.0010e-04 1.2 1.50e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  3  0  0  0   0  3  0  0  0   100
VecCopy                1 1.0 2.0528e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet                12 1.0 9.3842e-04 1.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY                2 1.0 1.3900e-04 1.1 2.00e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  4  0  0  0   0  4  0  0  0   576
VecMAXPY               3 1.0 1.1849e-04 1.3 5.00e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  9  0  0  0   0  9  0  0  0  1688
VecScatterBegin        9 1.0 8.5258e-04 1.3 0.00e+00 0.0 3.6e+01 1.9e+01 0.0e+00  0  0 36  0  0   0  0 36  0  0     0
VecScatterEnd          9 1.0 3.6597e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecNormalize           3 1.0 1.6172e-03 1.3 4.50e+04 1.0 0.0e+00 0.0e+00 6.0e+00  0  8  0  0  5   0  8  0  0  5   111
KSPGMRESOrthog         2 1.0 2.5308e-03 4.4 6.00e+04 1.0 0.0e+00 0.0e+00 7.0e+00  1 11  0  0  6   1 11  0  0  6    95
KSPSetUp               2 1.0 2.9721e-03 1.9 0.00e+00 0.0 0.0e+00 0.0e+00 5.0e+00  1  0  0  0  4   1  0  0  0  4     0
KSPSolve               1 1.0 3.0974e-02 2.8 4.10e+05 1.0 3.0e+01 1.9e+01 2.1e+01  6 72 30  0 18   6 72 30  0 19    53
PCSetUp                2 1.0 1.3779e-01 1.2 8.26e+04 1.0 4.2e+01 3.3e+01 2.4e+01 47 15 42  0 21  47 15 42  0 21     2
PCSetUpOnBlocks        2 1.0 6.2808e-02 1.4 8.26e+04 1.0 0.0e+00 0.0e+00 0.0e+00 20 15  0  0  0  20 15  0  0  0     5
PCApply                3 1.0 5.5861e-03 1.4 1.65e+05 1.0 1.8e+01 1.9e+01 3.0e+00  2 29 18  0  3   2 29 18  0  3   118
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Viewer     4              3         2480     0.
              Matrix     5              0            0     0.
              Vector    14              3        84960     0.
      Vector Scatter     2              0            0     0.
           Index Set    10              6        14724     0.
       Krylov Solver     2              0            0     0.
      Preconditioner     2              0            0     0.
========================================================================================================================
Average time to get PetscTime(): 6.67572e-07
Average time for MPI_Barrier(): 2.24113e-06
Average time for zero size MPI_Send(): 3.49879e-05
#PETSc Option Table entries:
-f /home/users/kanikas/MyProjects/PerfomanceModeling/direct_order6_test_60_6_1.mat
-ksp_type gmres
-log_summary
-pc_type asm
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-cblaslapack=1 --with-ssl=0 --with-debugging=yes --with-pic=1 --with-shared-libraries=1 CFLAGS="-fPIC -fopenmp -O3 -g" CXXFLAGS="-fPIC -fopenmp -O3 -g" --with-mpi-dir=/usr/local/packages/mpich/3.2/gcc-4.9 --with-fc=0 --with-prefetch=0
-----------------------------------------
Libraries compiled on Sat Mar 11 18:20:27 2017 on arya 
Machine characteristics: Linux-4.4.0-22-generic-x86_64-with-debian-stretch-sid
Using PETSc directory: /disks/large/shared/soft/petsc-git
Using PETSc arch: arch-linux2-c-tau
-----------------------------------------

Using C compiler: /usr/local/packages/mpich/3.2/gcc-4.9/bin/mpicc -fPIC -fopenmp -O3 -g    ${COPTFLAGS} ${CFLAGS}
-----------------------------------------

Using include paths: -I/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/include -I/disks/large/shared/soft/petsc-git/include -I/disks/large/shared/soft/petsc-git/include -I/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/include -I/usr/local/packages/mpich/3.2/gcc-4.9/include
-----------------------------------------

Using C linker: /usr/local/packages/mpich/3.2/gcc-4.9/bin/mpicc
Using libraries: -Wl,-rpath,/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/lib -L/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/lib -lpetsc -llapack -lblas -lX11 -lm -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -L/usr/local/packages/mpich/3.2/gcc-4.9/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/4.8 -L/usr/lib/gcc/x86_64-linux-gnu/4.8 -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -Wl,-rpath,/lib/x86_64-linux-gnu -L/lib/x86_64-linux-gnu -lmpicxx -lstdc++ -lm -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -L/usr/local/packages/mpich/3.2/gcc-4.9/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/4.8 -L/usr/lib/gcc/x86_64-linux-gnu/4.8 -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -Wl,-rpath,/lib/x86_64-linux-gnu -L/lib/x86_64-linux-gnu -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -ldl -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -lmpi -lgomp -lgcc_s -lpthread -ldl 
-----------------------------------------



      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################




 WARNING:   -log_summary is being deprecated; switch to -log_view


************************************************************************************************************************
***             WIDEN YOUR WINDOW TO 120 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document            ***
************************************************************************************************************************

---------------------------------------------- PETSc Performance Summary: ----------------------------------------------



      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./parallel on a arch-linux2-c-tau named arya with 4 processors, by kanikas Tue Mar 28 17:35:35 2017
Using Petsc Development GIT revision: v3.7.5-3275-g86807ec  GIT Date: 2017-03-09 18:20:42 -0600

                         Max       Max/Min        Avg      Total 
Time (sec):           2.968e-01      1.00003   2.968e-01
Objects:              3.900e+01      1.00000   3.900e+01
Flop:                 5.678e+05      1.00050   5.676e+05  2.271e+06
Flop/sec:            1.913e+06      1.00050   1.913e+06  7.651e+06
Memory:               2.656e+06      1.03195              1.038e+07
MPI Messages:         3.350e+01      1.81081   2.725e+01  1.090e+02
MPI Message Lengths:  5.705e+05      2.99793   1.048e+04  1.142e+06
MPI Reductions:       2.185e+03      1.00000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flop
                            and VecAXPY() for complex vectors of length N --> 8N flop

Summary of Stages:   ----- Time ------  ----- Flop -----  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total   counts   %Total     Avg         %Total   counts   %Total 
 0:      Main Stage: 2.8697e-01  96.7%  2.2706e+06 100.0%  1.050e+02  96.3%  1.048e+04      100.0%  1.150e+02   5.3% 

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                   Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   Avg. len: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                             --- Global ---  --- Stage ---   Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   Avg len Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

MatMult                3 1.0 1.3521e-03 1.3 1.65e+05 1.0 1.8e+01 1.9e+01 0.0e+00  0 29 17  0  0   0 29 17  0  0   488
MatSolve               3 1.0 4.3631e-04 1.3 1.65e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0 29  0  0  0   0 29  0  0  0  1513
MatLUFactorNum         1 1.0 3.1077e-02 1.4 8.26e+04 1.0 0.0e+00 0.0e+00 0.0e+00  9 15  0  0  0  10 15  0  0  0    11
MatILUFactorSym        1 1.0 9.6762e-03 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  3  0  0  0  0   3  0  0  0  0     0
MatAssemblyBegin       2 1.0 6.0384e-03 6.3 0.00e+00 0.0 0.0e+00 0.0e+00 4.0e+00  1  0  0  0  0   1  0  0  0  3     0
MatAssemblyEnd         2 1.0 3.3503e-02 1.0 0.00e+00 0.0 1.2e+01 6.7e+00 2.3e+01 11  0 11  0  1  12  0 11  0 20     0
MatGetRowIJ            1 1.0 1.9836e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatCreateSubMats       1 1.0 1.4438e-02 1.4 0.00e+00 0.0 3.0e+01 4.3e+01 2.0e+00  4  0 28  0  0   4  0 29  0  2     0
MatGetOrdering         1 1.0 1.7765e-02 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  5  0  0  0  0   6  0  0  0  0     0
MatIncreaseOvrlp       1 1.0 5.4325e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 2.0e+00 18  0  0  0  0  19  0  0  0  2     0
MatLoad                1 1.0 5.7842e-02 1.0 0.00e+00 0.0 2.1e+01 5.4e+04 3.8e+01 19  0 19100  2  20  0 20100 33     0
MatView                6 3.0 3.2136e-03 2.0 0.00e+00 0.0 0.0e+00 0.0e+00 4.0e+00  1  0  0  0  0   1  0  0  0  3     0
VecMDot                2 1.0 2.2390e-03 9.4 3.00e+04 1.0 0.0e+00 0.0e+00 4.0e+00  1  5  0  0  0   1  5  0  0  3    54
VecNorm                4 1.0 1.0159e-03 2.1 4.00e+04 1.0 0.0e+00 0.0e+00 8.0e+00  0  7  0  0  0   0  7  0  0  7   158
VecScale               3 1.0 6.0010e-04 1.2 1.50e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  3  0  0  0   0  3  0  0  0   100
VecCopy                1 1.0 2.0528e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet                12 1.0 9.3842e-04 1.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY                2 1.0 1.3900e-04 1.1 2.00e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  4  0  0  0   0  4  0  0  0   576
VecMAXPY               3 1.0 1.1849e-04 1.3 5.00e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  9  0  0  0   0  9  0  0  0  1688
VecScatterBegin        9 1.0 8.5258e-04 1.3 0.00e+00 0.0 3.6e+01 1.9e+01 0.0e+00  0  0 33  0  0   0  0 34  0  0     0
VecScatterEnd          9 1.0 3.6597e-04 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecNormalize           3 1.0 1.6172e-03 1.3 4.50e+04 1.0 0.0e+00 0.0e+00 6.0e+00  0  8  0  0  0   0  8  0  0  5   111
KSPGMRESOrthog         2 1.0 2.5308e-03 4.4 6.00e+04 1.0 0.0e+00 0.0e+00 7.0e+00  1 11  0  0  0   1 11  0  0  6    95
KSPSetUp               2 1.0 2.9721e-03 1.9 0.00e+00 0.0 0.0e+00 0.0e+00 5.0e+00  1  0  0  0  0   1  0  0  0  4     0
KSPSolve               1 1.0 3.0974e-02 2.8 4.10e+05 1.0 3.0e+01 1.9e+01 2.1e+01  6 72 28  0  1   6 72 29  0 18    53
PCSetUp                2 1.0 1.3779e-01 1.2 8.26e+04 1.0 4.2e+01 3.3e+01 2.4e+01 44 15 39  0  1  46 15 40  0 21     2
PCSetUpOnBlocks        2 1.0 6.2808e-02 1.4 8.26e+04 1.0 0.0e+00 0.0e+00 0.0e+00 19 15  0  0  0  20 15  0  0  0     5
PCApply                3 1.0 5.5861e-03 1.4 1.65e+05 1.0 1.8e+01 1.9e+01 3.0e+00  2 29 17  0  0   2 29 17  0  3   118
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Viewer     4              3         2480     0.
              Matrix     5              2       886812     0.
              Vector    14             13       501328     0.
      Vector Scatter     2              1        41080     0.
           Index Set    10             10        97924     0.
       Krylov Solver     2              2        19576     0.
      Preconditioner     2              2         1984     0.
========================================================================================================================
Average time to get PetscTime(): 6.4373e-07
Average time for MPI_Barrier(): 2.3365e-06
Average time for zero size MPI_Send(): 7.33137e-06
#PETSc Option Table entries:
-f /home/users/kanikas/MyProjects/PerfomanceModeling/direct_order6_test_60_6_1.mat
-ksp_type gmres
-log_summary
-pc_type asm
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-cblaslapack=1 --with-ssl=0 --with-debugging=yes --with-pic=1 --with-shared-libraries=1 CFLAGS="-fPIC -fopenmp -O3 -g" CXXFLAGS="-fPIC -fopenmp -O3 -g" --with-mpi-dir=/usr/local/packages/mpich/3.2/gcc-4.9 --with-fc=0 --with-prefetch=0
-----------------------------------------
Libraries compiled on Sat Mar 11 18:20:27 2017 on arya 
Machine characteristics: Linux-4.4.0-22-generic-x86_64-with-debian-stretch-sid
Using PETSc directory: /disks/large/shared/soft/petsc-git
Using PETSc arch: arch-linux2-c-tau
-----------------------------------------

Using C compiler: /usr/local/packages/mpich/3.2/gcc-4.9/bin/mpicc -fPIC -fopenmp -O3 -g    ${COPTFLAGS} ${CFLAGS}
-----------------------------------------

Using include paths: -I/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/include -I/disks/large/shared/soft/petsc-git/include -I/disks/large/shared/soft/petsc-git/include -I/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/include -I/usr/local/packages/mpich/3.2/gcc-4.9/include
-----------------------------------------

Using C linker: /usr/local/packages/mpich/3.2/gcc-4.9/bin/mpicc
Using libraries: -Wl,-rpath,/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/lib -L/disks/large/shared/soft/petsc-git/arch-linux2-c-tau/lib -lpetsc -llapack -lblas -lX11 -lm -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -L/usr/local/packages/mpich/3.2/gcc-4.9/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/4.8 -L/usr/lib/gcc/x86_64-linux-gnu/4.8 -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -Wl,-rpath,/lib/x86_64-linux-gnu -L/lib/x86_64-linux-gnu -lmpicxx -lstdc++ -lm -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -L/usr/local/packages/mpich/3.2/gcc-4.9/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/4.8 -L/usr/lib/gcc/x86_64-linux-gnu/4.8 -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -Wl,-rpath,/lib/x86_64-linux-gnu -L/lib/x86_64-linux-gnu -Wl,-rpath,/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu -ldl -Wl,-rpath,/usr/local/packages/mpich/3.2/gcc-4.9/lib -lmpi -lgomp -lgcc_s -lpthread -ldl 
-----------------------------------------



      ##########################################################
      #                                                        #
      #                          WARNING!!!                    #
      #                                                        #
      #   This code was compiled with a debugging option,      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


